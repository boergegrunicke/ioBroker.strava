{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.3.0\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from '@iobroker/adapter-core';\nimport strava from 'strava-v3';\n\n// Load your modules here, e.g.:\n// import * as fs from \"fs\";\nclass Strava extends utils.Adapter {\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: 'strava',\n\t\t});\n\t\tthis.on('ready', this.onReady.bind(this));\n\t\tthis.on('stateChange', this.onStateChange.bind(this));\n\t\t// this.on('objectChange', this.onObjectChange.bind(this));\n\t\tthis.on('message', this.onMessage.bind(this));\n\t\tthis.on('unload', this.onUnload.bind(this));\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void> {\n\t\t// The adapters config (in the instance object everything under the attribute \"native\") is accessible via\n\t\t// this.config:\n\t\tthis.log.info('config clientId: ' + this.config.clientId);\n\t\tthis.log.info('config clientSecret: ' + this.config.clientSecret);\n\t\tthis.log.info('config authCode: ' + this.config.authCode);\n\n\t\t// Initialize your adapter here\n\n\t\tif (!this.config.clientId || !this.config.clientSecret) {\n\t\t\tthis.log.error('ERROR - client id AND client secret MUST be configured');\n\t\t\treturn;\n\t\t}\n\t\tstrava.config({\n\t\t\taccess_token: 'Your apps access token (Required for Quickstart)',\n\t\t\tclient_id: this.config.clientId,\n\t\t\tclient_secret: this.config.clientSecret,\n\t\t\tredirect_uri: 'http://localhost',\n\t\t});\n\n\t\tif (this.config.authUrl) {\n\t\t\tthis.log.error('Please use the url : ' + this.config.authUrl);\n\t\t\treturn;\n\t\t}\n\t\tif (!this.config.authCode) {\n\t\t\tconst oauthArgs = {\n\t\t\t\tclient_id: this.config.clientId,\n\t\t\t\tredirect_uri: 'http://localhost',\n\t\t\t\tresponse_type: 'code',\n\t\t\t};\n\t\t\tconst url = strava.oauth.getRequestAccessURL(oauthArgs).toString();\n\t\t\tthis.config.authUrl = url;\n\t\t\tthis.log.info(url);\n\t\t}\n\n\t\t// if (!this.config.accessToken) {\n\t\t// \tconst r = await strava.oauth.getToken(this.config.authCode);\n\t\t// \tthis.log.info('response : ' + JSON.stringify(r));\n\t\t// \tthis.log.info('access_token : ' + r.access_token);\n\t\t// \tthis.log.info('refreh_token : ' + r.refresh_token);\n\t\t// }\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\t// Here you must clear all timeouts or intervals that may still be active\n\t\t\t// clearTimeout(timeout1);\n\t\t\t// clearTimeout(timeout2);\n\t\t\t// ...\n\t\t\t// clearInterval(interval1);\n\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t// If you need to react to object changes, uncomment the following block and the corresponding line in the constructor.\n\t// You also need to subscribe to the objects with `this.subscribeObjects`, similar to `this.subscribeStates`.\n\t// /**\n\t//  * Is called if a subscribed object changes\n\t//  */\n\t// private onObjectChange(id: string, obj: ioBroker.Object | null | undefined): void {\n\t// \tif (obj) {\n\t// \t\t// The object was changed\n\t// \t\tthis.log.info(`object ${id} changed: ${JSON.stringify(obj)}`);\n\t// \t} else {\n\t// \t\t// The object was deleted\n\t// \t\tthis.log.info(`object ${id} deleted`);\n\t// \t}\n\t// }\n\n\t/**\n\t * Is called if a subscribed state changes\n\t */\n\tprivate onStateChange(id: string, state: ioBroker.State | null | undefined): void {\n\t\tif (state) {\n\t\t\t// The state was changed\n\t\t\tthis.log.info(`state ${id} changed: ${state.val} (ack = ${state.ack})`);\n\t\t} else {\n\t\t\t// The state was deleted\n\t\t\tthis.log.info(`state ${id} deleted`);\n\t\t}\n\t}\n\n\t// If you need to accept messages in your adapter, uncomment the following block and the corresponding line in the constructor.\n\t// /**\n\t//  * Some message was sent to this instance over message box. Used by email, pushover, text2speech, ...\n\t//  * Using this method requires \"common.messagebox\" property to be set to true in io-package.json\n\t//  */\n\tprivate onMessage(obj: ioBroker.Message): void {\n\t\tthis.log.info('on message: ' + JSON.stringify(obj));\n\t\tif (typeof obj === 'object' && obj.message) {\n\t\t\tif (obj.command === 'send') {\n\t\t\t\t// e.g. send email or pushover or whatever\n\t\t\t\tthis.log.info('send command');\n\n\t\t\t\t// Send response in callback if required\n\t\t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, 'Message received', obj.callback);\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Strava(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Strava())();\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAMA,YAAuB;AACvB,uBAAmB;AAInB,MAAM,eAAe,MAAM,QAAQ;AAAA,EAC3B,YAAY,UAAyC,CAAC,GAAG;AAC/D,UAAM;AAAA,MACL,GAAG;AAAA,MACH,MAAM;AAAA,IACP,CAAC;AACD,SAAK,GAAG,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC;AACxC,SAAK,GAAG,eAAe,KAAK,cAAc,KAAK,IAAI,CAAC;AAEpD,SAAK,GAAG,WAAW,KAAK,UAAU,KAAK,IAAI,CAAC;AAC5C,SAAK,GAAG,UAAU,KAAK,SAAS,KAAK,IAAI,CAAC;AAAA,EAC3C;AAAA,EAKA,MAAc,UAAyB;AAGtC,SAAK,IAAI,KAAK,sBAAsB,KAAK,OAAO,QAAQ;AACxD,SAAK,IAAI,KAAK,0BAA0B,KAAK,OAAO,YAAY;AAChE,SAAK,IAAI,KAAK,sBAAsB,KAAK,OAAO,QAAQ;AAIxD,QAAI,CAAC,KAAK,OAAO,YAAY,CAAC,KAAK,OAAO,cAAc;AACvD,WAAK,IAAI,MAAM,wDAAwD;AACvE;AAAA,IACD;AACA,qBAAAA,QAAO,OAAO;AAAA,MACb,cAAc;AAAA,MACd,WAAW,KAAK,OAAO;AAAA,MACvB,eAAe,KAAK,OAAO;AAAA,MAC3B,cAAc;AAAA,IACf,CAAC;AAED,QAAI,KAAK,OAAO,SAAS;AACxB,WAAK,IAAI,MAAM,0BAA0B,KAAK,OAAO,OAAO;AAC5D;AAAA,IACD;AACA,QAAI,CAAC,KAAK,OAAO,UAAU;AAC1B,YAAM,YAAY;AAAA,QACjB,WAAW,KAAK,OAAO;AAAA,QACvB,cAAc;AAAA,QACd,eAAe;AAAA,MAChB;AACA,YAAM,MAAM,iBAAAA,QAAO,MAAM,oBAAoB,SAAS,EAAE,SAAS;AACjE,WAAK,OAAO,UAAU;AACtB,WAAK,IAAI,KAAK,GAAG;AAAA,IAClB;AAAA,EAQD;AAAA,EAKQ,SAAS,UAA4B;AAC5C,QAAI;AAOH,eAAS;AAAA,IACV,SAAS,GAAP;AACD,eAAS;AAAA,IACV;AAAA,EACD;AAAA,EAoBQ,cAAc,IAAY,OAAgD;AACjF,QAAI,OAAO;AAEV,WAAK,IAAI,KAAK,SAAS,eAAe,MAAM,cAAc,MAAM,MAAM;AAAA,IACvE,OAAO;AAEN,WAAK,IAAI,KAAK,SAAS,YAAY;AAAA,IACpC;AAAA,EACD;AAAA,EAOQ,UAAU,KAA6B;AAC9C,SAAK,IAAI,KAAK,iBAAiB,KAAK,UAAU,GAAG,CAAC;AAClD,QAAI,OAAO,QAAQ,YAAY,IAAI,SAAS;AAC3C,UAAI,IAAI,YAAY,QAAQ;AAE3B,aAAK,IAAI,KAAK,cAAc;AAG5B,YAAI,IAAI;AAAU,eAAK,OAAO,IAAI,MAAM,IAAI,SAAS,oBAAoB,IAAI,QAAQ;AAAA,MACtF;AAAA,IACD;AAAA,EACD;AACD;AAEA,IAAI,QAAQ,SAAS,QAAQ;AAE5B,SAAO,UAAU,CAAC,YAAuD,IAAI,OAAO,OAAO;AAC5F,OAAO;AAEN,GAAC,MAAM,IAAI,OAAO,GAAG;AACtB;",
  "names": ["strava"]
}
